server:
  port: 8080

spring:
  application:
    name: shopizer-be
  jpa:
    properties:
      naming:
        implicit-strategy: org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy
        physical-strategy: org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy
  jackson:
    time-zone: Asia/Ho_Chi_Minh
    property-naming-strategy: LOWER_CAMEL_CASE
    default-property-inclusion: non_empty
    parser:
      allow-numeric-leading-zeros: true
      allow-non-numeric-numbers: true
      use-fast-big-number-parser: true
    deserialization:
      accept-float-as-int: false
  servlet:
    multipart:
      max-file-size: 4MB
      max-request-size: 5MB
      resolve-lazily: false
  flyway:
    enabled: ${FLY_WAY_ENABLE}
    locations: classpath:migration
  datasource:
    driver-class-name: org.postgresql.Driver
    host: ENC(${DB_HOST})
    database-name: ENC(${DATABASE_NAME})
    url: jdbc:postgresql://${spring.datasource.host}:${DB_PORT}/${spring.datasource.database-name}
    username: ENC(${DB_USERNAME})
    password: ENC(${DB_USER_PASSWORD})
    hikari:
      schema: ENC(${DB_SCHEMA})
      minimum-idle: 2
      maximum-pool-size: 10
      idle-timeout: 30000         # 30s - release idle connections
      max-lifetime: 600000        # 10m - recycle connections to avoid DB timeouts
      connection-timeout: 30000   # 30s - wait for connection
  rabbitmq:
    host: ENC(${RABBITMQ_HOST})
    port: ${RABBITMQ_PORT}
    username: ENC(${RABBITMQ_USER})
    password: ENC(${RABBITMQ_PASSWORD})
    listener:
      simple:
        prefetch: 1
        acknowledge-mode: manual
  # Quartz: JDBC job store + clustering (multi-instance safe)
  quartz:
    job-store-type: jdbc
    jdbc.initialize-schema: never   # import quartz SQL trước (Quartz cung cấp file schema)
    overwrite-existing-jobs: true
    properties:
      org.quartz.scheduler.instanceName: SolpyraBEScheduler
      org.quartz.scheduler.instanceId: AUTO
      org.quartz.jobStore.class: org.quartz.impl.jdbcjobstore.JobStoreTX
      org.quartz.jobStore.driverDelegateClass: org.quartz.impl.jdbcjobstore.PostgreSQLDelegate
      org.quartz.jobStore.useProperties: true
      org.quartz.jobStore.misfireThreshold: 300000
      org.quartz.jobStore.isClustered: true
      org.quartz.jobStore.dataSource: quartzDataSource
      org.quartz.dataSource.quartzDataSource.provider: hikaricp
      org.quartz.dataSource.quartzDataSource.driver: org.postgresql.Driver
      org.quartz.dataSource.quartzDataSource.URL: ${spring.datasource.url}?currentSchema=${spring.datasource.hikari.schema}
      org.quartz.dataSource.quartzDataSource.user: ${spring.datasource.username}
      org.quartz.dataSource.quartzDataSource.password: ${spring.datasource.password}
      org.quartz.dataSource.quartzDataSource.maxConnections: 5
      org.quartz.threadPool.threadCount: 6


rabbitmq:
  queues:
    add-order:
      name: add-order.queue
      exchange: add-order.exchange
      routing-key: add-order.key
    add-order-retry:
      name: add-order.queue.retry
      exchange: add-order.exchange
      routing-key: add-order.key.retry
      ttl: 86400000
    commission-clac:
      name: commission-clac.queue
      exchange: commission-clac.exchange
      routing-key: commission-clac.key
    commission-clac-callback:
      name: commission-clac-callback.queue
      exchange: commission-clac-callback.exchange
      routing-key: commission-clac-callback.k

jasypt:
  encryptor:
    algorithm: PBEWITHHMACSHA512ANDAES_256
    password: ${JASYPT_PASSWORD}

application:
  google:
    credential: ENC(${GOOGLE_DRIVE_CREDENTIAL})
    client-id: ENC(${GOOGLE_CLIENT_ID})
  jwt:
    secret: ENC(${JWT_SECRET})
    end-after: ${JWT_TIMEOUT}
    extra-time: ${JWT_EXTRA_TIME}
  white-list: ${WHITE_LIST}

#logging:
#  level:
#    org:
#      hibernate:
#        SQL: DEBUG
#        type:
#          descriptor:
#            sql:
#              BasicBinder: TRACE
#        orm:
#          jdbc:
#            bind: TRACE
#      spring:
#        framework:
#          jdbc:
#            core:
#              JdbcTemplate: DEBUG
#              StatementCreatorUtils: TRACE